Index: src/base.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import sys\nimport os\n\nscript_path = os.path.abspath(__file__)\ncurrent_file_dir = os.path.dirname(script_path)\nsys.path.insert(0, f\"{current_file_dir}/../FinRL/\")\n\nimport logging\nimport pandas as pd\nimport numpy as np\nimport datetime\nimport torch\nimport yfinance as yf\n\nfrom finrl.meta.preprocessor.yahoodownloader import YahooDownloader\nfrom finrl.meta.preprocessor.preprocessors import FeatureEngineer, data_split\nfrom finrl import config_tickers\nfrom finrl.config import INDICATORS\n\nfrom finrl.meta.preprocessor.preprocessors import GroupByScaler\nfrom finrl.meta.env_portfolio_optimization.env_portfolio_optimization import PortfolioOptimizationEnv\nfrom finrl.agents.portfolio_optimization.models import DRLAgent\nfrom finrl.agents.portfolio_optimization.architectures import EIIE\n\nimport src.env as env \n\ndef load_data() -> pd.DataFrame:\n    # download data\n    stocks = env.STOCKS\n    script_path = os.path.abspath(__file__)\n    current_file_dir = os.path.dirname(script_path)\n    data_path = os.path.join(\n           current_file_dir, \n           \"data\", \n           f\"{env.TIME_RANGE_START}-{env.TIME_RANGE_START}-{'-'.join(env.STOCKS)}.pkl\"\n    )\n    if not os.path.isfile(data_path): \n       df = YahooDownloader(\n               start_date = env.TIME_RANGE_START,\n               end_date = env.TIME_RANGE_END,\n               ticker_list = config_tickers.DOW_30_TICKER\n            ).fetch_data()\n       df.to_pickle(data_path)\n    else:\n       df = pd.read_pickle(data_path)\n    return df\n\ndef main():\n   logging.info(\"Starting pipeline\")\n   df = load_data()\n\n   # preprocess data, calculate set of technical indicators on the data\n   fe = FeatureEngineer(\n           use_technical_indicator=True,\n           tech_indicator_list = env.INDICATORS\n        )\n\n   df_t = fe.preprocess_data(df)\n   fmt = \"%Y-%m-%d\"\n   train_df = data_split(df, env.TRAIN_START.strftime(fmt), env.TRAIN_END.strftime(fmt))\n   test_df = data_split(df, env.TEST_START.strftime(fmt), env.TEST_END.strftime(fmt))\n\n   # setup portfolio optimization env\n   # TODO: should we really group by scaler? Is there a better approach?\n   environment = PortfolioOptimizationEnv(\n           train_df,\n           initial_amount=env.INITIAL_AMT,\n           comission_fee_pct=env.COMISSION_FEE_PCT,\n           time_window=env.TIME_WINDOW,\n           features=env.FEATURES,\n           normalize_df=None\n    )\n\n   model_kwargs = {\n           \"lr\": env.LR,\n           \"policy\": env.MODEL\n    }\n\n   policy_kwargs = {\n           \"k_size\": 3,\n           \"time_window\": 50\n    }\n\n   device = 'cuda:0' if torch.cuda.is_available() else 'cpu'\n   model = DRLAgent(environment).get_model(\"pg\", device, model_kwargs, policy_kwargs)\n   DRLAgent.train_model(model, episodes=40)\n\n   torch.save(model.train_policy.state_dict(), \"policy_EIIE.pt\")\n   import pdb; pdb.set_trace()\n\n\n\n\n   \n\nif __name__ == \"__main__\":\n    main()\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/base.py b/src/base.py
--- a/src/base.py	(revision 8759337aed640a0be6cfbfcb2050fa6de3c4aa2d)
+++ b/src/base.py	(date 1717429623817)
@@ -22,7 +22,7 @@
 from finrl.agents.portfolio_optimization.models import DRLAgent
 from finrl.agents.portfolio_optimization.architectures import EIIE
 
-import src.env as env 
+import src.neel_env as env
 
 def load_data() -> pd.DataFrame:
     # download data
Index: src/research-eiee.ipynb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n \"cells\": [\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 1,\n   \"id\": \"331283d2-4ae8-4f70-9cd5-e5bdd6f733ab\",\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"# load in policy_EIIE model\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 2,\n   \"id\": \"21e7812a-823d-4568-80ab-d05bb18df523\",\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"import sys\\n\",\n    \"import os\\n\",\n    \"\\n\",\n    \"script_path = os.path.abspath('')\\n\",\n    \"current_file_dir = os.path.dirname(script_path)\\n\",\n    \"sys.path.insert(0, f\\\"{current_file_dir}/FinRL/\\\")\\n\",\n    \"\\n\",\n    \"import logging\\n\",\n    \"import pandas as pd\\n\",\n    \"import numpy as np\\n\",\n    \"import datetime\\n\",\n    \"import torch\\n\",\n    \"import yfinance as yf\\n\",\n    \"\\n\",\n    \"from finrl.meta.preprocessor.yahoodownloader import YahooDownloader\\n\",\n    \"from finrl.meta.preprocessor.preprocessors import FeatureEngineer, data_split\\n\",\n    \"from finrl import config_tickers\\n\",\n    \"from finrl.config import INDICATORS\\n\",\n    \"\\n\",\n    \"from finrl.meta.preprocessor.preprocessors import GroupByScaler\\n\",\n    \"from finrl.meta.env_portfolio_optimization.env_portfolio_optimization import PortfolioOptimizationEnv\\n\",\n    \"from finrl.agents.portfolio_optimization.models import DRLAgent\\n\",\n    \"from finrl.agents.portfolio_optimization.architectures import EIIE\\n\",\n    \"\\n\",\n    \"import src.env as env \\n\",\n    \"\\n\",\n    \"device = 'cuda:0' if torch.cuda.is_available() else 'cpu'\\n\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 3,\n   \"id\": \"d8ff93ff-26ff-4ece-bd7b-3f237a645946\",\n   \"metadata\": {\n    \"editable\": true,\n    \"slideshow\": {\n     \"slide_type\": \"\"\n    },\n    \"tags\": []\n   },\n   \"outputs\": [],\n   \"source\": [\n    \"def load_data() -> pd.DataFrame:\\n\",\n    \"    # download data\\n\",\n    \"    stocks = env.STOCKS\\n\",\n    \"    script_path = os.path.abspath('')\\n\",\n    \"    current_file_dir = os.path.dirname(script_path)\\n\",\n    \"    data_path = os.path.join(\\n\",\n    \"           current_file_dir, \\n\",\n    \"           \\\"src\\\",\\n\",\n    \"           \\\"data\\\", \\n\",\n    \"           f\\\"{env.TIME_RANGE_START}-{env.TIME_RANGE_START}-{'-'.join(env.STOCKS)}.pkl\\\"\\n\",\n    \"    )\\n\",\n    \"    if not os.path.isfile(data_path): \\n\",\n    \"       df = YahooDownloader(\\n\",\n    \"               start_date = env.TIME_RANGE_START,\\n\",\n    \"               end_date = env.TIME_RANGE_END,\\n\",\n    \"               ticker_list = env.STOCKS,\\n\",\n    \"            ).fetch_data()\\n\",\n    \"       df.to_pickle(data_path)\\n\",\n    \"    else:\\n\",\n    \"       df = pd.read_pickle(data_path)\\n\",\n    \"    return df\\n\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 4,\n   \"id\": \"8f2a2758-96ee-45bf-8aa5-672c8b5c4416\",\n   \"metadata\": {\n    \"scrolled\": true\n   },\n   \"outputs\": [\n    {\n     \"name\": \"stderr\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"[*********************100%%**********************]  1 of 1 completed\\n\",\n      \"[*********************100%%**********************]  1 of 1 completed\\n\",\n      \"[*********************100%%**********************]  1 of 1 completed\\n\",\n      \"[*********************100%%**********************]  1 of 1 completed\\n\",\n      \"[*********************100%%**********************]  1 of 1 completed\\n\",\n      \"[*********************100%%**********************]  1 of 1 completed\\n\",\n      \"[*********************100%%**********************]  1 of 1 completed\\n\",\n      \"[*********************100%%**********************]  1 of 1 completed\\n\",\n      \"[*********************100%%**********************]  1 of 1 completed\\n\",\n      \"[*********************100%%**********************]  1 of 1 completed\\n\",\n      \"[*********************100%%**********************]  1 of 1 completed\\n\",\n      \"[*********************100%%**********************]  1 of 1 completed\\n\",\n      \"[*********************100%%**********************]  1 of 1 completed\\n\",\n      \"[*********************100%%**********************]  1 of 1 completed\\n\",\n      \"[*********************100%%**********************]  1 of 1 completed\\n\",\n      \"[*********************100%%**********************]  1 of 1 completed\\n\",\n      \"[*********************100%%**********************]  1 of 1 completed\\n\",\n      \"[*********************100%%**********************]  1 of 1 completed\\n\",\n      \"[*********************100%%**********************]  1 of 1 completed\\n\",\n      \"[*********************100%%**********************]  1 of 1 completed\\n\",\n      \"[*********************100%%**********************]  1 of 1 completed\\n\",\n      \"[*********************100%%**********************]  1 of 1 completed\\n\",\n      \"[*********************100%%**********************]  1 of 1 completed\\n\",\n      \"[*********************100%%**********************]  1 of 1 completed\\n\",\n      \"[*********************100%%**********************]  1 of 1 completed\\n\",\n      \"[*********************100%%**********************]  1 of 1 completed\\n\",\n      \"[*********************100%%**********************]  1 of 1 completed\\n\",\n      \"[*********************100%%**********************]  1 of 1 completed\\n\",\n      \"[*********************100%%**********************]  1 of 1 completed\\n\"\n     ]\n    },\n    {\n     \"name\": \"stdout\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"Shape of DataFrame:  (72964, 8)\\n\",\n      \"Successfully added technical indicators\\n\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"df = load_data()\\n\",\n    \"\\n\",\n    \"# preprocess data, calculate set of technical indicators on the data\\n\",\n    \"fe = FeatureEngineer(\\n\",\n    \"       use_technical_indicator=True,\\n\",\n    \"       tech_indicator_list = env.INDICATORS\\n\",\n    \"    )\\n\",\n    \"\\n\",\n    \"df_t = fe.preprocess_data(df)\\n\",\n    \"fmt = \\\"%Y-%m-%d\\\"\\n\",\n    \"train_df = data_split(df, env.TRAIN_START.strftime(fmt), env.TRAIN_END.strftime(fmt))\\n\",\n    \"test_df = data_split(df, env.TEST_START.strftime(fmt), env.TEST_END.strftime(fmt))\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 5,\n   \"id\": \"2ef6f778-1425-43dd-8afb-8463d9b68813\",\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>date</th>\\n\",\n       \"      <th>open</th>\\n\",\n       \"      <th>high</th>\\n\",\n       \"      <th>low</th>\\n\",\n       \"      <th>close</th>\\n\",\n       \"      <th>volume</th>\\n\",\n       \"      <th>tic</th>\\n\",\n       \"      <th>day</th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>2019-01-02</td>\\n\",\n       \"      <td>38.722500</td>\\n\",\n       \"      <td>39.712502</td>\\n\",\n       \"      <td>38.557499</td>\\n\",\n       \"      <td>37.793777</td>\\n\",\n       \"      <td>148158800</td>\\n\",\n       \"      <td>AAPL</td>\\n\",\n       \"      <td>2</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>2019-01-02</td>\\n\",\n       \"      <td>192.520004</td>\\n\",\n       \"      <td>193.199997</td>\\n\",\n       \"      <td>188.949997</td>\\n\",\n       \"      <td>162.268097</td>\\n\",\n       \"      <td>3009100</td>\\n\",\n       \"      <td>AMGN</td>\\n\",\n       \"      <td>2</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>2019-01-02</td>\\n\",\n       \"      <td>93.910004</td>\\n\",\n       \"      <td>96.269997</td>\\n\",\n       \"      <td>93.769997</td>\\n\",\n       \"      <td>88.524513</td>\\n\",\n       \"      <td>4175400</td>\\n\",\n       \"      <td>AXP</td>\\n\",\n       \"      <td>2</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"         date        open        high         low       close     volume  \\\\\\n\",\n       \"0  2019-01-02   38.722500   39.712502   38.557499   37.793777  148158800   \\n\",\n       \"0  2019-01-02  192.520004  193.199997  188.949997  162.268097    3009100   \\n\",\n       \"0  2019-01-02   93.910004   96.269997   93.769997   88.524513    4175400   \\n\",\n       \"\\n\",\n       \"    tic  day  \\n\",\n       \"0  AAPL    2  \\n\",\n       \"0  AMGN    2  \\n\",\n       \"0   AXP    2  \"\n      ]\n     },\n     \"execution_count\": 5,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"test_df.head(3)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 6,\n   \"id\": \"e9630c0e-c795-4c78-b3c3-71cddd1b3934\",\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"model_kwargs = {\\n\",\n    \"       \\\"lr\\\": env.LR,\\n\",\n    \"       \\\"policy\\\": env.MODEL\\n\",\n    \"}\\n\",\n    \"\\n\",\n    \"policy_kwargs = {\\n\",\n    \"       \\\"k_size\\\": 3,\\n\",\n    \"       \\\"time_window\\\": 50\\n\",\n    \"}\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 7,\n   \"id\": \"ed8e69b5-d40f-4dc6-af58-5ce31b82f25e\",\n   \"metadata\": {\n    \"editable\": true,\n    \"slideshow\": {\n     \"slide_type\": \"\"\n    },\n    \"tags\": []\n   },\n   \"outputs\": [],\n   \"source\": [\n    \"environment_train = PortfolioOptimizationEnv(\\n\",\n    \"       train_df,\\n\",\n    \"       initial_amount=env.INITIAL_AMT,\\n\",\n    \"       comission_fee_pct=env.COMISSION_FEE_PCT,\\n\",\n    \"       time_window=env.TIME_WINDOW,\\n\",\n    \"       features=env.FEATURES,\\n\",\n    \"       normalize_df=None\\n\",\n    \")\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 8,\n   \"id\": \"2554195f-1b8d-45d9-8328-b8e698cc4bbd\",\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"model = DRLAgent(environment_train).get_model(\\\"pg\\\", device, model_kwargs, policy_kwargs)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 9,\n   \"id\": \"e5096aad-27d7-4319-b810-38299a2a78ac\",\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"name\": \"stderr\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"  0%|                                                                                                                                                                                                                          | 0/2 [00:00<?, ?it/s]\"\n     ]\n    },\n    {\n     \"name\": \"stdout\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"=================================\\n\",\n      \"Initial portfolio value:100000\\n\",\n      \"Final portfolio value: 318521.71875\\n\",\n      \"Final accumulative portfolio value: 3.1852171875\\n\",\n      \"Maximum DrawDown: -0.1798230333923052\\n\",\n      \"Sharpe ratio: 1.0037443563667496\\n\",\n      \"=================================\\n\"\n     ]\n    },\n    {\n     \"name\": \"stderr\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \" 50%|█████████████████████████████████████████████████████████████████████████████████████████████████████████                                                                                                         | 1/2 [00:24<00:24, 24.36s/it]\"\n     ]\n    },\n    {\n     \"name\": \"stdout\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"=================================\\n\",\n      \"Initial portfolio value:100000\\n\",\n      \"Final portfolio value: 339576.34375\\n\",\n      \"Final accumulative portfolio value: 3.3957634375\\n\",\n      \"Maximum DrawDown: -0.15218789218709006\\n\",\n      \"Sharpe ratio: 1.058404370137302\\n\",\n      \"=================================\\n\"\n     ]\n    },\n    {\n     \"name\": \"stderr\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 2/2 [00:48<00:00, 24.48s/it]\\n\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"model = DRLAgent.train_model(model, episodes=2)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 10,\n   \"id\": \"db3a98c0-4c61-4eb4-9aef-ddd2d4f8ba6b\",\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"import copy\\n\",\n    \"model_cpy = copy.deepcopy(model)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 11,\n   \"id\": \"1aca316d-273c-4f9b-abbb-77e213ab8484\",\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"environment_test = PortfolioOptimizationEnv(\\n\",\n    \"    test_df,\\n\",\n    \"    initial_amount=env.INITIAL_AMT,\\n\",\n    \"    comission_fee_pct=env.COMISSION_FEE_PCT,\\n\",\n    \"    time_window=env.TIME_WINDOW,\\n\",\n    \"    features=env.FEATURES,\\n\",\n    \"    normalize_df=None\\n\",\n    \")\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 12,\n   \"id\": \"ec63dc62-e004-44a5-9768-06e34391d722\",\n   \"metadata\": {\n    \"editable\": true,\n    \"slideshow\": {\n     \"slide_type\": \"\"\n    },\n    \"tags\": []\n   },\n   \"outputs\": [\n    {\n     \"name\": \"stdout\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"=================================\\n\",\n      \"Initial portfolio value:100000\\n\",\n      \"Final portfolio value: 114772.453125\\n\",\n      \"Final accumulative portfolio value: 1.14772453125\\n\",\n      \"Maximum DrawDown: -0.0584464029223164\\n\",\n      \"Sharpe ratio: 1.5507021931346088\\n\",\n      \"=================================\\n\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"# policy = EIIE(time_window=50, device=device)\\n\",\n    \"# policy.load_state_dict(torch.load(\\\"policy_EIIE.pt\\\"))\\n\",\n    \"\\n\",\n    \"# # 2020\\n\",\n    \"DRLAgent.DRL_validation(model, environment_test, policy=model.train_policy)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 13,\n   \"id\": \"1eed560a-ab7f-448b-b318-35b85b6f76b5\",\n   \"metadata\": {\n    \"editable\": true,\n    \"slideshow\": {\n     \"slide_type\": \"\"\n    },\n    \"tags\": []\n   },\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>date</th>\\n\",\n       \"      <th>open</th>\\n\",\n       \"      <th>high</th>\\n\",\n       \"      <th>low</th>\\n\",\n       \"      <th>close</th>\\n\",\n       \"      <th>volume</th>\\n\",\n       \"      <th>tic</th>\\n\",\n       \"      <th>day</th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>2010-01-04</td>\\n\",\n       \"      <td>7.622500</td>\\n\",\n       \"      <td>7.660714</td>\\n\",\n       \"      <td>7.585000</td>\\n\",\n       \"      <td>6.461975</td>\\n\",\n       \"      <td>493729600</td>\\n\",\n       \"      <td>AAPL</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>2010-01-04</td>\\n\",\n       \"      <td>56.630001</td>\\n\",\n       \"      <td>57.869999</td>\\n\",\n       \"      <td>56.560001</td>\\n\",\n       \"      <td>41.200783</td>\\n\",\n       \"      <td>5277400</td>\\n\",\n       \"      <td>AMGN</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>2010-01-04</td>\\n\",\n       \"      <td>40.810001</td>\\n\",\n       \"      <td>41.099998</td>\\n\",\n       \"      <td>40.389999</td>\\n\",\n       \"      <td>33.090439</td>\\n\",\n       \"      <td>6894300</td>\\n\",\n       \"      <td>AXP</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>2010-01-04</td>\\n\",\n       \"      <td>55.720001</td>\\n\",\n       \"      <td>56.389999</td>\\n\",\n       \"      <td>54.799999</td>\\n\",\n       \"      <td>43.777557</td>\\n\",\n       \"      <td>6186700</td>\\n\",\n       \"      <td>BA</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>2010-01-04</td>\\n\",\n       \"      <td>57.650002</td>\\n\",\n       \"      <td>59.189999</td>\\n\",\n       \"      <td>57.509998</td>\\n\",\n       \"      <td>40.190228</td>\\n\",\n       \"      <td>7325600</td>\\n\",\n       \"      <td>CAT</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>...</th>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2263</th>\\n\",\n       \"      <td>2018-12-31</td>\\n\",\n       \"      <td>248.059998</td>\\n\",\n       \"      <td>250.279999</td>\\n\",\n       \"      <td>246.940002</td>\\n\",\n       \"      <td>230.275436</td>\\n\",\n       \"      <td>3123200</td>\\n\",\n       \"      <td>UNH</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2263</th>\\n\",\n       \"      <td>2018-12-31</td>\\n\",\n       \"      <td>131.679993</td>\\n\",\n       \"      <td>132.440002</td>\\n\",\n       \"      <td>130.229996</td>\\n\",\n       \"      <td>127.043968</td>\\n\",\n       \"      <td>7976000</td>\\n\",\n       \"      <td>V</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2263</th>\\n\",\n       \"      <td>2018-12-31</td>\\n\",\n       \"      <td>55.529999</td>\\n\",\n       \"      <td>56.230000</td>\\n\",\n       \"      <td>55.070000</td>\\n\",\n       \"      <td>42.255058</td>\\n\",\n       \"      <td>15331800</td>\\n\",\n       \"      <td>VZ</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2263</th>\\n\",\n       \"      <td>2018-12-31</td>\\n\",\n       \"      <td>68.540001</td>\\n\",\n       \"      <td>68.720001</td>\\n\",\n       \"      <td>67.739998</td>\\n\",\n       \"      <td>53.132278</td>\\n\",\n       \"      <td>4870900</td>\\n\",\n       \"      <td>WBA</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2263</th>\\n\",\n       \"      <td>2018-12-31</td>\\n\",\n       \"      <td>30.889999</td>\\n\",\n       \"      <td>31.129999</td>\\n\",\n       \"      <td>30.750000</td>\\n\",\n       \"      <td>28.378319</td>\\n\",\n       \"      <td>21017400</td>\\n\",\n       \"      <td>WMT</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"<p>65656 rows × 8 columns</p>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"            date        open        high         low       close     volume  \\\\\\n\",\n       \"0     2010-01-04    7.622500    7.660714    7.585000    6.461975  493729600   \\n\",\n       \"0     2010-01-04   56.630001   57.869999   56.560001   41.200783    5277400   \\n\",\n       \"0     2010-01-04   40.810001   41.099998   40.389999   33.090439    6894300   \\n\",\n       \"0     2010-01-04   55.720001   56.389999   54.799999   43.777557    6186700   \\n\",\n       \"0     2010-01-04   57.650002   59.189999   57.509998   40.190228    7325600   \\n\",\n       \"...          ...         ...         ...         ...         ...        ...   \\n\",\n       \"2263  2018-12-31  248.059998  250.279999  246.940002  230.275436    3123200   \\n\",\n       \"2263  2018-12-31  131.679993  132.440002  130.229996  127.043968    7976000   \\n\",\n       \"2263  2018-12-31   55.529999   56.230000   55.070000   42.255058   15331800   \\n\",\n       \"2263  2018-12-31   68.540001   68.720001   67.739998   53.132278    4870900   \\n\",\n       \"2263  2018-12-31   30.889999   31.129999   30.750000   28.378319   21017400   \\n\",\n       \"\\n\",\n       \"       tic  day  \\n\",\n       \"0     AAPL    0  \\n\",\n       \"0     AMGN    0  \\n\",\n       \"0      AXP    0  \\n\",\n       \"0       BA    0  \\n\",\n       \"0      CAT    0  \\n\",\n       \"...    ...  ...  \\n\",\n       \"2263   UNH    0  \\n\",\n       \"2263     V    0  \\n\",\n       \"2263    VZ    0  \\n\",\n       \"2263   WBA    0  \\n\",\n       \"2263   WMT    0  \\n\",\n       \"\\n\",\n       \"[65656 rows x 8 columns]\"\n      ]\n     },\n     \"execution_count\": 13,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"train_df\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 14,\n   \"id\": \"47cce5c5-7a4d-424a-81fd-996037567a77\",\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>date</th>\\n\",\n       \"      <th>open</th>\\n\",\n       \"      <th>high</th>\\n\",\n       \"      <th>low</th>\\n\",\n       \"      <th>close</th>\\n\",\n       \"      <th>volume</th>\\n\",\n       \"      <th>tic</th>\\n\",\n       \"      <th>day</th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>2019-01-02</td>\\n\",\n       \"      <td>38.722500</td>\\n\",\n       \"      <td>39.712502</td>\\n\",\n       \"      <td>38.557499</td>\\n\",\n       \"      <td>37.793777</td>\\n\",\n       \"      <td>148158800</td>\\n\",\n       \"      <td>AAPL</td>\\n\",\n       \"      <td>2</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>2019-01-02</td>\\n\",\n       \"      <td>192.520004</td>\\n\",\n       \"      <td>193.199997</td>\\n\",\n       \"      <td>188.949997</td>\\n\",\n       \"      <td>162.268097</td>\\n\",\n       \"      <td>3009100</td>\\n\",\n       \"      <td>AMGN</td>\\n\",\n       \"      <td>2</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>2019-01-02</td>\\n\",\n       \"      <td>93.910004</td>\\n\",\n       \"      <td>96.269997</td>\\n\",\n       \"      <td>93.769997</td>\\n\",\n       \"      <td>88.524513</td>\\n\",\n       \"      <td>4175400</td>\\n\",\n       \"      <td>AXP</td>\\n\",\n       \"      <td>2</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>2019-01-02</td>\\n\",\n       \"      <td>316.190002</td>\\n\",\n       \"      <td>323.950012</td>\\n\",\n       \"      <td>313.709991</td>\\n\",\n       \"      <td>314.645172</td>\\n\",\n       \"      <td>3292200</td>\\n\",\n       \"      <td>BA</td>\\n\",\n       \"      <td>2</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>2019-01-02</td>\\n\",\n       \"      <td>124.029999</td>\\n\",\n       \"      <td>127.879997</td>\\n\",\n       \"      <td>123.000000</td>\\n\",\n       \"      <td>110.966431</td>\\n\",\n       \"      <td>4783200</td>\\n\",\n       \"      <td>CAT</td>\\n\",\n       \"      <td>2</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>...</th>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>251</th>\\n\",\n       \"      <td>2019-12-31</td>\\n\",\n       \"      <td>293.660004</td>\\n\",\n       \"      <td>294.089996</td>\\n\",\n       \"      <td>291.149994</td>\\n\",\n       \"      <td>276.337555</td>\\n\",\n       \"      <td>2224200</td>\\n\",\n       \"      <td>UNH</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>251</th>\\n\",\n       \"      <td>2019-12-31</td>\\n\",\n       \"      <td>187.059998</td>\\n\",\n       \"      <td>188.000000</td>\\n\",\n       \"      <td>186.539993</td>\\n\",\n       \"      <td>182.088333</td>\\n\",\n       \"      <td>5273000</td>\\n\",\n       \"      <td>V</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>251</th>\\n\",\n       \"      <td>2019-12-31</td>\\n\",\n       \"      <td>61.209999</td>\\n\",\n       \"      <td>61.400002</td>\\n\",\n       \"      <td>60.939999</td>\\n\",\n       \"      <td>48.101662</td>\\n\",\n       \"      <td>8466700</td>\\n\",\n       \"      <td>VZ</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>251</th>\\n\",\n       \"      <td>2019-12-31</td>\\n\",\n       \"      <td>58.820000</td>\\n\",\n       \"      <td>59.470001</td>\\n\",\n       \"      <td>58.810001</td>\\n\",\n       \"      <td>47.291969</td>\\n\",\n       \"      <td>3305100</td>\\n\",\n       \"      <td>WBA</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>251</th>\\n\",\n       \"      <td>2019-12-31</td>\\n\",\n       \"      <td>39.833332</td>\\n\",\n       \"      <td>39.933334</td>\\n\",\n       \"      <td>39.396667</td>\\n\",\n       \"      <td>36.938072</td>\\n\",\n       \"      <td>14736000</td>\\n\",\n       \"      <td>WMT</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"<p>7308 rows × 8 columns</p>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"           date        open        high         low       close     volume  \\\\\\n\",\n       \"0    2019-01-02   38.722500   39.712502   38.557499   37.793777  148158800   \\n\",\n       \"0    2019-01-02  192.520004  193.199997  188.949997  162.268097    3009100   \\n\",\n       \"0    2019-01-02   93.910004   96.269997   93.769997   88.524513    4175400   \\n\",\n       \"0    2019-01-02  316.190002  323.950012  313.709991  314.645172    3292200   \\n\",\n       \"0    2019-01-02  124.029999  127.879997  123.000000  110.966431    4783200   \\n\",\n       \"..          ...         ...         ...         ...         ...        ...   \\n\",\n       \"251  2019-12-31  293.660004  294.089996  291.149994  276.337555    2224200   \\n\",\n       \"251  2019-12-31  187.059998  188.000000  186.539993  182.088333    5273000   \\n\",\n       \"251  2019-12-31   61.209999   61.400002   60.939999   48.101662    8466700   \\n\",\n       \"251  2019-12-31   58.820000   59.470001   58.810001   47.291969    3305100   \\n\",\n       \"251  2019-12-31   39.833332   39.933334   39.396667   36.938072   14736000   \\n\",\n       \"\\n\",\n       \"      tic  day  \\n\",\n       \"0    AAPL    2  \\n\",\n       \"0    AMGN    2  \\n\",\n       \"0     AXP    2  \\n\",\n       \"0      BA    2  \\n\",\n       \"0     CAT    2  \\n\",\n       \"..    ...  ...  \\n\",\n       \"251   UNH    1  \\n\",\n       \"251     V    1  \\n\",\n       \"251    VZ    1  \\n\",\n       \"251   WBA    1  \\n\",\n       \"251   WMT    1  \\n\",\n       \"\\n\",\n       \"[7308 rows x 8 columns]\"\n      ]\n     },\n     \"execution_count\": 14,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"test_df\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"id\": \"7ffff302-fa1b-4de1-8276-3b23a64af13e\",\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": []\n  }\n ],\n \"metadata\": {\n  \"kernelspec\": {\n   \"display_name\": \"Python 3 (ipykernel)\",\n   \"language\": \"python\",\n   \"name\": \"python3\"\n  },\n  \"language_info\": {\n   \"codemirror_mode\": {\n    \"name\": \"ipython\",\n    \"version\": 3\n   },\n   \"file_extension\": \".py\",\n   \"mimetype\": \"text/x-python\",\n   \"name\": \"python\",\n   \"nbconvert_exporter\": \"python\",\n   \"pygments_lexer\": \"ipython3\",\n   \"version\": \"3.10.14\"\n  }\n },\n \"nbformat\": 4,\n \"nbformat_minor\": 5\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/research-eiee.ipynb b/src/research-eiee.ipynb
--- a/src/research-eiee.ipynb	(revision 8759337aed640a0be6cfbfcb2050fa6de3c4aa2d)
+++ b/src/research-eiee.ipynb	(date 1717429623781)
@@ -41,7 +41,7 @@
     "from finrl.agents.portfolio_optimization.models import DRLAgent\n",
     "from finrl.agents.portfolio_optimization.architectures import EIIE\n",
     "\n",
-    "import src.env as env \n",
+    "import src.neel_env as env \n",
     "\n",
     "device = 'cuda:0' if torch.cuda.is_available() else 'cpu'\n"
    ]
Index: src/research-gpm.ipynb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n \"cells\": [\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 3,\n   \"id\": \"21e7812a-823d-4568-80ab-d05bb18df523\",\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"import sys\\n\",\n    \"import os\\n\",\n    \"\\n\",\n    \"script_path = os.path.abspath('')\\n\",\n    \"current_file_dir = os.path.dirname(script_path)\\n\",\n    \"sys.path.insert(0, f\\\"{current_file_dir}/FinRL/\\\")\\n\",\n    \"\\n\",\n    \"import logging\\n\",\n    \"import pandas as pd\\n\",\n    \"import numpy as np\\n\",\n    \"import datetime\\n\",\n    \"import torch\\n\",\n    \"import yfinance as yf\\n\",\n    \"\\n\",\n    \"from finrl.meta.preprocessor.yahoodownloader import YahooDownloader\\n\",\n    \"from finrl.meta.preprocessor.preprocessors import FeatureEngineer, data_split\\n\",\n    \"from finrl import config_tickers\\n\",\n    \"from finrl.config import INDICATORS\\n\",\n    \"\\n\",\n    \"from finrl.meta.preprocessor.preprocessors import GroupByScaler\\n\",\n    \"from finrl.meta.env_portfolio_optimization.env_portfolio_optimization import PortfolioOptimizationEnv\\n\",\n    \"from finrl.agents.portfolio_optimization.models import DRLAgent\\n\",\n    \"from finrl.agents.portfolio_optimization.architectures import EIIE\\n\",\n    \"\\n\",\n    \"import src.env as env \\n\",\n    \"\\n\",\n    \"device = 'cuda:0' if torch.cuda.is_available() else 'cpu'\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 4,\n   \"id\": \"d8ff93ff-26ff-4ece-bd7b-3f237a645946\",\n   \"metadata\": {\n    \"editable\": true,\n    \"slideshow\": {\n     \"slide_type\": \"\"\n    },\n    \"tags\": []\n   },\n   \"outputs\": [],\n   \"source\": [\n    \"def load_data() -> pd.DataFrame:\\n\",\n    \"    # download data\\n\",\n    \"    stocks = env.STOCKS\\n\",\n    \"    script_path = os.path.abspath('')\\n\",\n    \"    current_file_dir = os.path.dirname(script_path)\\n\",\n    \"    data_path = os.path.join(\\n\",\n    \"           current_file_dir, \\n\",\n    \"           \\\"src\\\",\\n\",\n    \"           \\\"data\\\", \\n\",\n    \"           f\\\"{env.TIME_RANGE_START}-{env.TIME_RANGE_START}-{'-'.join(env.STOCKS)}.pkl\\\"\\n\",\n    \"    )\\n\",\n    \"    if not os.path.isfile(data_path): \\n\",\n    \"       df = YahooDownloader(\\n\",\n    \"               start_date = env.TIME_RANGE_START,\\n\",\n    \"               end_date = env.TIME_RANGE_END,\\n\",\n    \"               ticker_list = env.STOCKS,\\n\",\n    \"            ).fetch_data()\\n\",\n    \"       df.to_pickle(data_path)\\n\",\n    \"    else:\\n\",\n    \"       df = pd.read_pickle(data_path)\\n\",\n    \"    return df\\n\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 5,\n   \"id\": \"8f2a2758-96ee-45bf-8aa5-672c8b5c4416\",\n   \"metadata\": {\n    \"editable\": true,\n    \"scrolled\": true,\n    \"slideshow\": {\n     \"slide_type\": \"\"\n    },\n    \"tags\": []\n   },\n   \"outputs\": [\n    {\n     \"name\": \"stdout\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"Successfully added technical indicators\\n\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"df = load_data()\\n\",\n    \"\\n\",\n    \"# preprocess data, calculate set of technical indicators on the data\\n\",\n    \"fe = FeatureEngineer(\\n\",\n    \"       use_technical_indicator=True,\\n\",\n    \"       tech_indicator_list = env.INDICATORS\\n\",\n    \"    )\\n\",\n    \"\\n\",\n    \"df_t = fe.preprocess_data(df)\\n\",\n    \"fmt = \\\"%Y-%m-%d\\\"\\n\",\n    \"train_df = data_split(df, env.TRAIN_START.strftime(fmt), env.TRAIN_END.strftime(fmt))\\n\",\n    \"test_df = data_split(df, env.TEST_START.strftime(fmt), env.TEST_END.strftime(fmt))\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"id\": \"b20ac1ad-c9e7-4b42-a7a6-ede45abcd9ca\",\n   \"metadata\": {},\n   \"source\": [\n    \"### Load in graph and temporal data to enhance feature space\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 6,\n   \"id\": \"b6ce1528-5cdd-4bc6-9d10-49788d7e49b5\",\n   \"metadata\": {\n    \"scrolled\": true\n   },\n   \"outputs\": [\n    {\n     \"name\": \"stdout\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\\n\",\n      \"                                 Dload  Upload   Total   Spent    Left  Speed\\n\",\n      \"  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\\n\",\n      \"100  146M    0  146M    0     0  5362k      0 --:--:--  0:00:27 --:--:-- 6164k    0  3338k      0 --:--:--  0:00:06 --:--:-- 4389k 0 --:--:--  0:00:12 --:--:-- 5487k00:20 --:--:-- 6131k\\n\",\n      \"unzip:  cannot find or open Temporal_Relational_Stock_Ranking_FinRL-main.zip, Temporal_Relational_Stock_Ranking_FinRL-main.zip.zip or Temporal_Relational_Stock_Ranking_FinRL-main.zip.ZIP.\\n\",\n      \"mv: rename Temporal_Relational_Stock_Ranking_FinRL-main to Temporal_Relational_Stock_Ranking_FinRL: No such file or directory\\n\",\n      \"tar: Error opening archive: Failed to open 'Temporal_Relational_Stock_Ranking_FinRL/temporal_data/temporal_data_processed.tar.gz'\\n\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"!curl -L -O https://github.com/C4i0kun/Temporal_Relational_Stock_Ranking_FinRL/archive/refs/heads/main.zip\\n\",\n    \"# note: manually unzip f\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"id\": \"d037e3a3-7425-4078-8dfb-ba1ff98c3647\",\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"temporal = pd.read_csv(\\\"Temporal_Relational_Stock_Ranking_FinRL/temporal_data/NASDAQ_temporal_data.csv\\\")\\n\",\n    \"nasdaq_temporal\\n\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"id\": \"3faf5f19-7d48-48c7-8a28-55a1fb2c2887\",\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": []\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"id\": \"7f0b74b1-3ed6-4b4e-96d4-aef917c8584a\",\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": []\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 5,\n   \"id\": \"2ef6f778-1425-43dd-8afb-8463d9b68813\",\n   \"metadata\": {\n    \"editable\": true,\n    \"slideshow\": {\n     \"slide_type\": \"\"\n    },\n    \"tags\": []\n   },\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>date</th>\\n\",\n       \"      <th>open</th>\\n\",\n       \"      <th>high</th>\\n\",\n       \"      <th>low</th>\\n\",\n       \"      <th>close</th>\\n\",\n       \"      <th>volume</th>\\n\",\n       \"      <th>tic</th>\\n\",\n       \"      <th>day</th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>2019-01-02</td>\\n\",\n       \"      <td>38.722500</td>\\n\",\n       \"      <td>39.712502</td>\\n\",\n       \"      <td>38.557499</td>\\n\",\n       \"      <td>37.793777</td>\\n\",\n       \"      <td>148158800</td>\\n\",\n       \"      <td>AAPL</td>\\n\",\n       \"      <td>2</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>2019-01-02</td>\\n\",\n       \"      <td>192.520004</td>\\n\",\n       \"      <td>193.199997</td>\\n\",\n       \"      <td>188.949997</td>\\n\",\n       \"      <td>162.268097</td>\\n\",\n       \"      <td>3009100</td>\\n\",\n       \"      <td>AMGN</td>\\n\",\n       \"      <td>2</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>2019-01-02</td>\\n\",\n       \"      <td>93.910004</td>\\n\",\n       \"      <td>96.269997</td>\\n\",\n       \"      <td>93.769997</td>\\n\",\n       \"      <td>88.524513</td>\\n\",\n       \"      <td>4175400</td>\\n\",\n       \"      <td>AXP</td>\\n\",\n       \"      <td>2</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"         date        open        high         low       close     volume  \\\\\\n\",\n       \"0  2019-01-02   38.722500   39.712502   38.557499   37.793777  148158800   \\n\",\n       \"0  2019-01-02  192.520004  193.199997  188.949997  162.268097    3009100   \\n\",\n       \"0  2019-01-02   93.910004   96.269997   93.769997   88.524513    4175400   \\n\",\n       \"\\n\",\n       \"    tic  day  \\n\",\n       \"0  AAPL    2  \\n\",\n       \"0  AMGN    2  \\n\",\n       \"0   AXP    2  \"\n      ]\n     },\n     \"execution_count\": 5,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"test_df.head(3)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 6,\n   \"id\": \"e9630c0e-c795-4c78-b3c3-71cddd1b3934\",\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"model_kwargs = {\\n\",\n    \"       \\\"lr\\\": env.LR,\\n\",\n    \"       \\\"policy\\\": env.MODEL\\n\",\n    \"}\\n\",\n    \"\\n\",\n    \"policy_kwargs = {\\n\",\n    \"       \\\"k_size\\\": 3,\\n\",\n    \"       \\\"time_window\\\": 50\\n\",\n    \"}\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 7,\n   \"id\": \"ed8e69b5-d40f-4dc6-af58-5ce31b82f25e\",\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"environment_train = PortfolioOptimizationEnv(\\n\",\n    \"       train_df,\\n\",\n    \"       initial_amount=env.INITIAL_AMT,\\n\",\n    \"       comission_fee_pct=env.COMISSION_FEE_PCT,\\n\",\n    \"       time_window=env.TIME_WINDOW,\\n\",\n    \"       features=env.FEATURES,\\n\",\n    \"       normalize_df=None\\n\",\n    \")\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 8,\n   \"id\": \"2554195f-1b8d-45d9-8328-b8e698cc4bbd\",\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"model = DRLAgent(environment_train).get_model(\\\"pg\\\", device, model_kwargs, policy_kwargs)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 9,\n   \"id\": \"e5096aad-27d7-4319-b810-38299a2a78ac\",\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"name\": \"stderr\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"  0%|                                                                                                                                                                                                                          | 0/2 [00:00<?, ?it/s]\"\n     ]\n    },\n    {\n     \"name\": \"stdout\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"=================================\\n\",\n      \"Initial portfolio value:100000\\n\",\n      \"Final portfolio value: 318521.71875\\n\",\n      \"Final accumulative portfolio value: 3.1852171875\\n\",\n      \"Maximum DrawDown: -0.1798230333923052\\n\",\n      \"Sharpe ratio: 1.0037443563667496\\n\",\n      \"=================================\\n\"\n     ]\n    },\n    {\n     \"name\": \"stderr\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \" 50%|█████████████████████████████████████████████████████████████████████████████████████████████████████████                                                                                                         | 1/2 [00:24<00:24, 24.36s/it]\"\n     ]\n    },\n    {\n     \"name\": \"stdout\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"=================================\\n\",\n      \"Initial portfolio value:100000\\n\",\n      \"Final portfolio value: 339576.34375\\n\",\n      \"Final accumulative portfolio value: 3.3957634375\\n\",\n      \"Maximum DrawDown: -0.15218789218709006\\n\",\n      \"Sharpe ratio: 1.058404370137302\\n\",\n      \"=================================\\n\"\n     ]\n    },\n    {\n     \"name\": \"stderr\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 2/2 [00:48<00:00, 24.48s/it]\\n\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"model = DRLAgent.train_model(model, episodes=2)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 10,\n   \"id\": \"db3a98c0-4c61-4eb4-9aef-ddd2d4f8ba6b\",\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"import copy\\n\",\n    \"model_cpy = copy.deepcopy(model)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 11,\n   \"id\": \"1aca316d-273c-4f9b-abbb-77e213ab8484\",\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"environment_test = PortfolioOptimizationEnv(\\n\",\n    \"    test_df,\\n\",\n    \"    initial_amount=env.INITIAL_AMT,\\n\",\n    \"    comission_fee_pct=env.COMISSION_FEE_PCT,\\n\",\n    \"    time_window=env.TIME_WINDOW,\\n\",\n    \"    features=env.FEATURES,\\n\",\n    \"    normalize_df=None\\n\",\n    \")\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 12,\n   \"id\": \"ec63dc62-e004-44a5-9768-06e34391d722\",\n   \"metadata\": {\n    \"editable\": true,\n    \"slideshow\": {\n     \"slide_type\": \"\"\n    },\n    \"tags\": []\n   },\n   \"outputs\": [\n    {\n     \"name\": \"stdout\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"=================================\\n\",\n      \"Initial portfolio value:100000\\n\",\n      \"Final portfolio value: 114772.453125\\n\",\n      \"Final accumulative portfolio value: 1.14772453125\\n\",\n      \"Maximum DrawDown: -0.0584464029223164\\n\",\n      \"Sharpe ratio: 1.5507021931346088\\n\",\n      \"=================================\\n\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"# policy = EIIE(time_window=50, device=device)\\n\",\n    \"# policy.load_state_dict(torch.load(\\\"policy_EIIE.pt\\\"))\\n\",\n    \"\\n\",\n    \"# # 2020\\n\",\n    \"DRLAgent.DRL_validation(model, environment_test, policy=model.train_policy)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 13,\n   \"id\": \"1eed560a-ab7f-448b-b318-35b85b6f76b5\",\n   \"metadata\": {\n    \"editable\": true,\n    \"slideshow\": {\n     \"slide_type\": \"\"\n    },\n    \"tags\": []\n   },\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>date</th>\\n\",\n       \"      <th>open</th>\\n\",\n       \"      <th>high</th>\\n\",\n       \"      <th>low</th>\\n\",\n       \"      <th>close</th>\\n\",\n       \"      <th>volume</th>\\n\",\n       \"      <th>tic</th>\\n\",\n       \"      <th>day</th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>2010-01-04</td>\\n\",\n       \"      <td>7.622500</td>\\n\",\n       \"      <td>7.660714</td>\\n\",\n       \"      <td>7.585000</td>\\n\",\n       \"      <td>6.461975</td>\\n\",\n       \"      <td>493729600</td>\\n\",\n       \"      <td>AAPL</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>2010-01-04</td>\\n\",\n       \"      <td>56.630001</td>\\n\",\n       \"      <td>57.869999</td>\\n\",\n       \"      <td>56.560001</td>\\n\",\n       \"      <td>41.200783</td>\\n\",\n       \"      <td>5277400</td>\\n\",\n       \"      <td>AMGN</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>2010-01-04</td>\\n\",\n       \"      <td>40.810001</td>\\n\",\n       \"      <td>41.099998</td>\\n\",\n       \"      <td>40.389999</td>\\n\",\n       \"      <td>33.090439</td>\\n\",\n       \"      <td>6894300</td>\\n\",\n       \"      <td>AXP</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>2010-01-04</td>\\n\",\n       \"      <td>55.720001</td>\\n\",\n       \"      <td>56.389999</td>\\n\",\n       \"      <td>54.799999</td>\\n\",\n       \"      <td>43.777557</td>\\n\",\n       \"      <td>6186700</td>\\n\",\n       \"      <td>BA</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>2010-01-04</td>\\n\",\n       \"      <td>57.650002</td>\\n\",\n       \"      <td>59.189999</td>\\n\",\n       \"      <td>57.509998</td>\\n\",\n       \"      <td>40.190228</td>\\n\",\n       \"      <td>7325600</td>\\n\",\n       \"      <td>CAT</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>...</th>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2263</th>\\n\",\n       \"      <td>2018-12-31</td>\\n\",\n       \"      <td>248.059998</td>\\n\",\n       \"      <td>250.279999</td>\\n\",\n       \"      <td>246.940002</td>\\n\",\n       \"      <td>230.275436</td>\\n\",\n       \"      <td>3123200</td>\\n\",\n       \"      <td>UNH</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2263</th>\\n\",\n       \"      <td>2018-12-31</td>\\n\",\n       \"      <td>131.679993</td>\\n\",\n       \"      <td>132.440002</td>\\n\",\n       \"      <td>130.229996</td>\\n\",\n       \"      <td>127.043968</td>\\n\",\n       \"      <td>7976000</td>\\n\",\n       \"      <td>V</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2263</th>\\n\",\n       \"      <td>2018-12-31</td>\\n\",\n       \"      <td>55.529999</td>\\n\",\n       \"      <td>56.230000</td>\\n\",\n       \"      <td>55.070000</td>\\n\",\n       \"      <td>42.255058</td>\\n\",\n       \"      <td>15331800</td>\\n\",\n       \"      <td>VZ</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2263</th>\\n\",\n       \"      <td>2018-12-31</td>\\n\",\n       \"      <td>68.540001</td>\\n\",\n       \"      <td>68.720001</td>\\n\",\n       \"      <td>67.739998</td>\\n\",\n       \"      <td>53.132278</td>\\n\",\n       \"      <td>4870900</td>\\n\",\n       \"      <td>WBA</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2263</th>\\n\",\n       \"      <td>2018-12-31</td>\\n\",\n       \"      <td>30.889999</td>\\n\",\n       \"      <td>31.129999</td>\\n\",\n       \"      <td>30.750000</td>\\n\",\n       \"      <td>28.378319</td>\\n\",\n       \"      <td>21017400</td>\\n\",\n       \"      <td>WMT</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"<p>65656 rows × 8 columns</p>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"            date        open        high         low       close     volume  \\\\\\n\",\n       \"0     2010-01-04    7.622500    7.660714    7.585000    6.461975  493729600   \\n\",\n       \"0     2010-01-04   56.630001   57.869999   56.560001   41.200783    5277400   \\n\",\n       \"0     2010-01-04   40.810001   41.099998   40.389999   33.090439    6894300   \\n\",\n       \"0     2010-01-04   55.720001   56.389999   54.799999   43.777557    6186700   \\n\",\n       \"0     2010-01-04   57.650002   59.189999   57.509998   40.190228    7325600   \\n\",\n       \"...          ...         ...         ...         ...         ...        ...   \\n\",\n       \"2263  2018-12-31  248.059998  250.279999  246.940002  230.275436    3123200   \\n\",\n       \"2263  2018-12-31  131.679993  132.440002  130.229996  127.043968    7976000   \\n\",\n       \"2263  2018-12-31   55.529999   56.230000   55.070000   42.255058   15331800   \\n\",\n       \"2263  2018-12-31   68.540001   68.720001   67.739998   53.132278    4870900   \\n\",\n       \"2263  2018-12-31   30.889999   31.129999   30.750000   28.378319   21017400   \\n\",\n       \"\\n\",\n       \"       tic  day  \\n\",\n       \"0     AAPL    0  \\n\",\n       \"0     AMGN    0  \\n\",\n       \"0      AXP    0  \\n\",\n       \"0       BA    0  \\n\",\n       \"0      CAT    0  \\n\",\n       \"...    ...  ...  \\n\",\n       \"2263   UNH    0  \\n\",\n       \"2263     V    0  \\n\",\n       \"2263    VZ    0  \\n\",\n       \"2263   WBA    0  \\n\",\n       \"2263   WMT    0  \\n\",\n       \"\\n\",\n       \"[65656 rows x 8 columns]\"\n      ]\n     },\n     \"execution_count\": 13,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"train_df\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 14,\n   \"id\": \"47cce5c5-7a4d-424a-81fd-996037567a77\",\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>date</th>\\n\",\n       \"      <th>open</th>\\n\",\n       \"      <th>high</th>\\n\",\n       \"      <th>low</th>\\n\",\n       \"      <th>close</th>\\n\",\n       \"      <th>volume</th>\\n\",\n       \"      <th>tic</th>\\n\",\n       \"      <th>day</th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>2019-01-02</td>\\n\",\n       \"      <td>38.722500</td>\\n\",\n       \"      <td>39.712502</td>\\n\",\n       \"      <td>38.557499</td>\\n\",\n       \"      <td>37.793777</td>\\n\",\n       \"      <td>148158800</td>\\n\",\n       \"      <td>AAPL</td>\\n\",\n       \"      <td>2</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>2019-01-02</td>\\n\",\n       \"      <td>192.520004</td>\\n\",\n       \"      <td>193.199997</td>\\n\",\n       \"      <td>188.949997</td>\\n\",\n       \"      <td>162.268097</td>\\n\",\n       \"      <td>3009100</td>\\n\",\n       \"      <td>AMGN</td>\\n\",\n       \"      <td>2</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>2019-01-02</td>\\n\",\n       \"      <td>93.910004</td>\\n\",\n       \"      <td>96.269997</td>\\n\",\n       \"      <td>93.769997</td>\\n\",\n       \"      <td>88.524513</td>\\n\",\n       \"      <td>4175400</td>\\n\",\n       \"      <td>AXP</td>\\n\",\n       \"      <td>2</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>2019-01-02</td>\\n\",\n       \"      <td>316.190002</td>\\n\",\n       \"      <td>323.950012</td>\\n\",\n       \"      <td>313.709991</td>\\n\",\n       \"      <td>314.645172</td>\\n\",\n       \"      <td>3292200</td>\\n\",\n       \"      <td>BA</td>\\n\",\n       \"      <td>2</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>2019-01-02</td>\\n\",\n       \"      <td>124.029999</td>\\n\",\n       \"      <td>127.879997</td>\\n\",\n       \"      <td>123.000000</td>\\n\",\n       \"      <td>110.966431</td>\\n\",\n       \"      <td>4783200</td>\\n\",\n       \"      <td>CAT</td>\\n\",\n       \"      <td>2</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>...</th>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>251</th>\\n\",\n       \"      <td>2019-12-31</td>\\n\",\n       \"      <td>293.660004</td>\\n\",\n       \"      <td>294.089996</td>\\n\",\n       \"      <td>291.149994</td>\\n\",\n       \"      <td>276.337555</td>\\n\",\n       \"      <td>2224200</td>\\n\",\n       \"      <td>UNH</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>251</th>\\n\",\n       \"      <td>2019-12-31</td>\\n\",\n       \"      <td>187.059998</td>\\n\",\n       \"      <td>188.000000</td>\\n\",\n       \"      <td>186.539993</td>\\n\",\n       \"      <td>182.088333</td>\\n\",\n       \"      <td>5273000</td>\\n\",\n       \"      <td>V</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>251</th>\\n\",\n       \"      <td>2019-12-31</td>\\n\",\n       \"      <td>61.209999</td>\\n\",\n       \"      <td>61.400002</td>\\n\",\n       \"      <td>60.939999</td>\\n\",\n       \"      <td>48.101662</td>\\n\",\n       \"      <td>8466700</td>\\n\",\n       \"      <td>VZ</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>251</th>\\n\",\n       \"      <td>2019-12-31</td>\\n\",\n       \"      <td>58.820000</td>\\n\",\n       \"      <td>59.470001</td>\\n\",\n       \"      <td>58.810001</td>\\n\",\n       \"      <td>47.291969</td>\\n\",\n       \"      <td>3305100</td>\\n\",\n       \"      <td>WBA</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>251</th>\\n\",\n       \"      <td>2019-12-31</td>\\n\",\n       \"      <td>39.833332</td>\\n\",\n       \"      <td>39.933334</td>\\n\",\n       \"      <td>39.396667</td>\\n\",\n       \"      <td>36.938072</td>\\n\",\n       \"      <td>14736000</td>\\n\",\n       \"      <td>WMT</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"<p>7308 rows × 8 columns</p>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"           date        open        high         low       close     volume  \\\\\\n\",\n       \"0    2019-01-02   38.722500   39.712502   38.557499   37.793777  148158800   \\n\",\n       \"0    2019-01-02  192.520004  193.199997  188.949997  162.268097    3009100   \\n\",\n       \"0    2019-01-02   93.910004   96.269997   93.769997   88.524513    4175400   \\n\",\n       \"0    2019-01-02  316.190002  323.950012  313.709991  314.645172    3292200   \\n\",\n       \"0    2019-01-02  124.029999  127.879997  123.000000  110.966431    4783200   \\n\",\n       \"..          ...         ...         ...         ...         ...        ...   \\n\",\n       \"251  2019-12-31  293.660004  294.089996  291.149994  276.337555    2224200   \\n\",\n       \"251  2019-12-31  187.059998  188.000000  186.539993  182.088333    5273000   \\n\",\n       \"251  2019-12-31   61.209999   61.400002   60.939999   48.101662    8466700   \\n\",\n       \"251  2019-12-31   58.820000   59.470001   58.810001   47.291969    3305100   \\n\",\n       \"251  2019-12-31   39.833332   39.933334   39.396667   36.938072   14736000   \\n\",\n       \"\\n\",\n       \"      tic  day  \\n\",\n       \"0    AAPL    2  \\n\",\n       \"0    AMGN    2  \\n\",\n       \"0     AXP    2  \\n\",\n       \"0      BA    2  \\n\",\n       \"0     CAT    2  \\n\",\n       \"..    ...  ...  \\n\",\n       \"251   UNH    1  \\n\",\n       \"251     V    1  \\n\",\n       \"251    VZ    1  \\n\",\n       \"251   WBA    1  \\n\",\n       \"251   WMT    1  \\n\",\n       \"\\n\",\n       \"[7308 rows x 8 columns]\"\n      ]\n     },\n     \"execution_count\": 14,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"test_df\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"id\": \"7ffff302-fa1b-4de1-8276-3b23a64af13e\",\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": []\n  }\n ],\n \"metadata\": {\n  \"kernelspec\": {\n   \"display_name\": \"Python 3 (ipykernel)\",\n   \"language\": \"python\",\n   \"name\": \"python3\"\n  },\n  \"language_info\": {\n   \"codemirror_mode\": {\n    \"name\": \"ipython\",\n    \"version\": 3\n   },\n   \"file_extension\": \".py\",\n   \"mimetype\": \"text/x-python\",\n   \"name\": \"python\",\n   \"nbconvert_exporter\": \"python\",\n   \"pygments_lexer\": \"ipython3\",\n   \"version\": \"3.10.14\"\n  }\n },\n \"nbformat\": 4,\n \"nbformat_minor\": 5\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/research-gpm.ipynb b/src/research-gpm.ipynb
--- a/src/research-gpm.ipynb	(revision 8759337aed640a0be6cfbfcb2050fa6de3c4aa2d)
+++ b/src/research-gpm.ipynb	(date 1717429623811)
@@ -31,7 +31,7 @@
     "from finrl.agents.portfolio_optimization.models import DRLAgent\n",
     "from finrl.agents.portfolio_optimization.architectures import EIIE\n",
     "\n",
-    "import src.env as env \n",
+    "import src.neel_env as env \n",
     "\n",
     "device = 'cuda:0' if torch.cuda.is_available() else 'cpu'"
    ]
Index: src/.ipynb_checkpoints/base-checkpoint.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import sys\nimport os\n\nscript_path = os.path.abspath(__file__)\ncurrent_file_dir = os.path.dirname(script_path)\nsys.path.insert(0, f\"{current_file_dir}/../FinRL/\")\n\nimport logging\nimport pandas as pd\nimport numpy as np\nimport datetime\nimport torch\nimport yfinance as yf\n\nfrom finrl.meta.preprocessor.yahoodownloader import YahooDownloader\nfrom finrl.meta.preprocessor.preprocessors import FeatureEngineer, data_split\nfrom finrl import config_tickers\nfrom finrl.config import INDICATORS\n\nfrom finrl.meta.preprocessor.preprocessors import GroupByScaler\nfrom finrl.meta.env_portfolio_optimization.env_portfolio_optimization import PortfolioOptimizationEnv\nfrom finrl.agents.portfolio_optimization.models import DRLAgent\nfrom finrl.agents.portfolio_optimization.architectures import EIIE\n\nimport src.env as env \n\ndef load_data() -> pd.DataFrame:\n    # download data\n    stocks = env.STOCKS\n    script_path = os.path.abspath(__file__)\n    current_file_dir = os.path.dirname(script_path)\n    data_path = os.path.join(\n           current_file_dir, \n           \"data\", \n           f\"{env.TIME_RANGE_START}-{env.TIME_RANGE_START}-{'-'.join(env.STOCKS)}.pkl\"\n    )\n    if not os.path.isfile(data_path): \n       df = YahooDownloader(\n               start_date = env.TIME_RANGE_START,\n               end_date = env.TIME_RANGE_END,\n               ticker_list = config_tickers.DOW_30_TICKER\n            ).fetch_data()\n       df.to_pickle(data_path)\n    else:\n       df = pd.read_pickle(data_path)\n    return df\n\ndef main():\n   logging.info(\"Starting pipeline\")\n   df = load_data()\n\n   # preprocess data, calculate set of technical indicators on the data\n   fe = FeatureEngineer(\n           use_technical_indicator=True,\n           tech_indicator_list = env.INDICATORS\n        )\n\n   df_t = fe.preprocess_data(df)\n   fmt = \"%Y-%m-%d\"\n   train_df = data_split(df, env.TRAIN_START.strftime(fmt), env.TRAIN_END.strftime(fmt))\n   test_df = data_split(df, env.TEST_START.strftime(fmt), env.TEST_END.strftime(fmt))\n\n   # setup portfolio optimization env\n   # TODO: should we really group by scaler? Is there a better approach?\n   environment = PortfolioOptimizationEnv(\n           train_df,\n           initial_amount=env.INITIAL_AMT,\n           comission_fee_pct=env.COMISSION_FEE_PCT,\n           time_window=env.TIME_WINDOW,\n           features=env.FEATURES,\n           normalize_df=None\n    )\n\n   model_kwargs = {\n           \"lr\": env.LR,\n           \"policy\": env.MODEL\n    }\n\n   policy_kwargs = {\n           \"k_size\": 3,\n           \"time_window\": 50\n    }\n\n   device = 'cuda:0' if torch.cuda.is_available() else 'cpu'\n   model = DRLAgent(environment).get_model(\"pg\", device, model_kwargs, policy_kwargs)\n   DRLAgent.train_model(model, episodes=40)\n\n   torch.save(model.train_policy.state_dict(), \"policy_EIIE.pt\")\n   import pdb; pdb.set_trace()\n\n\n\n\n   \n\nif __name__ == \"__main__\":\n    main()\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/.ipynb_checkpoints/base-checkpoint.py b/src/.ipynb_checkpoints/base-checkpoint.py
--- a/src/.ipynb_checkpoints/base-checkpoint.py	(revision 8759337aed640a0be6cfbfcb2050fa6de3c4aa2d)
+++ b/src/.ipynb_checkpoints/base-checkpoint.py	(date 1717429623815)
@@ -22,7 +22,7 @@
 from finrl.agents.portfolio_optimization.models import DRLAgent
 from finrl.agents.portfolio_optimization.architectures import EIIE
 
-import src.env as env 
+import src.neel_env as env
 
 def load_data() -> pd.DataFrame:
     # download data
